version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: mysql-container
    restart: always
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - app-network

  java-application:
    image: maxsuelsbr/datadog-monitoring:latest
    container_name: java-application
    restart: on-failure
    depends_on:
      - mysql
      - datadog-agent
    env_file:
      - .env
    environment:
      DD_AGENT_HOST: ${DD_AGENT_HOST}
      DD_ENV: ${DD_ENV}
      DD_SERVICE: ${DD_SERVICE}
      DD_VERSION: ${DD_VERSION}
    ports:
      - "8080:8080"
    networks:
      - app-network

  datadog-agent:
    image: datadog/agent:latest
    container_name: datadog-agent
    env_file:
      - .env
    environment:
      - DD_API_KEY=${DD_API_KEY}
      - DD_SITE=${DD_SITE}
      - DD_ENV=${DD_ENV}
      - DD_APM_ENABLED=${DD_APM_ENABLED}
      - DD_PROCESS_AGENT_ENABLED=${DD_PROCESS_AGENT_ENABLED}
      - DD_HOSTNAME=${DD_HOSTNAME}
      - DD_LOGS_ENABLED=${DD_LOGS_ENABLED}
      - DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL=${DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL}
    ports:
      - "8126:8126"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc:/host/proc:ro
      - /sys/fs/cgroup:/host/sys/fs/cgroup:ro
    cap_add:
      - SYS_ADMIN
      - SYS_RESOURCE
      - NET_ADMIN
    security_opt:
      - apparmor:unconfined
    privileged: true
    networks:
      - app-network

volumes:
  mysql-data:

networks:
  app-network:
    driver: bridge